<?xml version="1.0" encoding="UTF-8"?>
<jobi>
   <metadata>
      <row>
         <version>12.2.0</version>
      </row>
   </metadata>
   <general_attributes>
      <row>
         <minimum_ae_version>11.2</minimum_ae_version>
         <child_flags>00000000000000000000000000000000</child_flags>
         <last_runtimes>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</last_runtimes>
         <name>PCK.AUTOMIC_WINDOWS_SERVICE.PRV.INC.TRANSFORM_DATA</name>
         <type>JOBI</type>
         <versioning_id>1650831788</versioning_id>
      </row>
   </general_attributes>
   <scripts>
      <row>
         <process><![CDATA[$scFiles=Get-ChildItem $tempPath | Where-Object {$_.PSIsContainer -eq $false} | Select-Object name

#first process output from sc commands and build a hash array
$res=@{}
$keys_to_process = "ERROR_CONTROL","START_TYPE","STATE","TYPE"
foreach ($fileName in $scFiles) {

 $fileName=join-path $tempPath $fileName.name
 $file=Get-Content $fileName
 foreach ($i in $file) {

  $i=$i -replace "^\s+",""
  $j=$i.split(":")

  $len=$j.length
  if ($len -gt 1 ) {
    if ($j[0]) {
      $key=$j[0].Trim()
      if ( $key -ceq "SERVICE_START_NAME" ) {
        $key = $key+" (Service run as user)"
      }
    }
    if ($len -gt 2) {
      $val=[System.string]::join(":",$j[1..$j.length]).Trim()
    } else {
      $val=$j[1].Trim()
    }
    if ( $res.Contains($key) -and $key -ne "SERVICE_NAME" ){
      $res[$key]=$res[$key]+", "+$val
    } else {
      $res[$key]=$val
    }
    if ( $keys_to_process -match $key ) {
      $res[$key]=$res[$key] -replace " ","-" -replace ",-",", " -replace "---", "-" -replace "--","-"
    }
    write-output "key:$key"
    write-output "val:$val"
  }
 }
}
write-output "--------------------------------------------"
write-output $res

$xmlDoc='<?xml version="1.0" encoding="UTF-8"?>
<windowsServiceSnapshot date="' + $currentDateTime + '" guid="'+$guid+'" serviceName="'+$serviceName+'" type="svc" >'
$xmlDoc=$xmlDoc+'<service>'
foreach($k in $res.Keys) {
 $value=$res[$k]
 $value=$value -replace '"',"&quot;"
 write-output "value:$value"
 $xmlDoc=$xmlDoc+'<property name="'+$k+'" value="'+$value+'"/>'
}
$xmlDoc=$xmlDoc+'</service>'
$xmlDoc=$xmlDoc+"</windowsServiceSnapshot>"

$doc=[xml]$xmlDoc]]></process>
      </row>
   </scripts>
</jobi>

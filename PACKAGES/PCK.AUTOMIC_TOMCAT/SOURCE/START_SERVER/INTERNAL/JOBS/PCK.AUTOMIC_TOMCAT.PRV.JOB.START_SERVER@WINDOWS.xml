<?xml version="1.0" encoding="UTF-8"?>
<jobs>
   <metadata>
      <row>
         <version>12.2.0</version>
      </row>
   </metadata>
   <general_attributes>
      <row>
         <minimum_ae_version>11.2</minimum_ae_version>
         <auto_deactivation>F</auto_deactivation>
         <child_flags>00000000000000000000000000000000</child_flags>
         <deactivation_condition>ANY_OK</deactivation_condition>
         <platform>WINDOWS</platform>
         <last_runtimes>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</last_runtimes>
         <max_parallel_action>1</max_parallel_action>
         <mrt_time>000000</mrt_time>
         <name>PCK.AUTOMIC_TOMCAT.PRV.JOB.START_SERVER@WINDOWS</name>
         <type>JOBS</type>
         <inherit_output_filter>N</inherit_output_filter>
         <queue>CLIENT_QUEUE</queue>
         <versioning_id>1559678496</versioning_id>
      </row>
   </general_attributes>
   <scripts>
      <row>
         <process><![CDATA[:INCLUDE PCK.ITPA_SHARED.PUB.INCLUDE.POWERSHELL_UTILITY
:INCLUDE PCK.AUTOMIC_TOMCAT.PRV.INCLUDE.GET_NETWORK_STATISTICS@WINDOWS

:DEFINE &BOOTSTRAP#, string
:SET &BOOTSTRAP# = "org.apache.catalina.startup.Bootstrap"

:SET &UC4RB_CONVERTED_STRING# = &UC4RB_TC_HOME_DIR#
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CONVERT_SLASHES_WINDOWS_STYLE
:SET &UC4RB_TC_HOME_DIR# = &UC4RB_CONVERTED_STRING#

Function fail_if_running {
:  IF  &UC4RB_TC_FAIL_IF_RUNNING# = "YES"
  echo "Tomcat already running.";
  exit 1;
:  ELSE
  echo "OK.";
  exit 0;
:  ENDIF
}

! Check config file
$existed = (Test-Path "&UC4RB_TC_HOME_DIR#\conf\server.xml")
if (!$existed) {
  echo "File &UC4RB_TC_HOME_DIR#\conf\server.xml does not existed.";
  echo "Error starting.";
  exit(2);
}

! Get port number
$portList=@()
(Select-Xml -path "&UC4RB_TC_HOME_DIR#\conf\server.xml" -xpath "/Server/Service/Connector[@protocol='HTTP/1.1' or count(@protocol)=0]/@port") | foreach {
  $port=$_.Node."#text"
  $portList += $port;
}

$portList = $portList | select -uniq;
echo "The port of Tomcat is $portList"

! Get Port status
$objects=@();
$pidList=@();
foreach ($port in $portList) {
  (Get-NetworkStatistics) | Where-Object {$_.State -eq "LISTENING" -and $_.LocalPort -eq $port} | foreach {
    $processId = $_.PID;
    $pidList += $processId;
    echo "ProcessId $processId is LISTENING at $port";
  }
}

$isPortUsed=0;
if($pidList ){
  $pidList = $pidList | select -uniq;
  $isPortUsed = 1;
}

if ($isPortUsed -eq 1) {
  echo "Port is already used.";
  foreach ($processId in $pidList) {
    $commandLine = (Get-WmiObject win32_process -Filter "ProcessId=$processId").CommandLine;
    $processName = (Get-WmiObject win32_process -Filter "ProcessId=$processId").Name;

    if ($processName -match "java") {
      $catalina_home = "&UC4RB_TC_HOME_DIR#";
      $catalina_home = $catalina_home.Replace("\", "\\");
      if (($commandLine -match "&BOOTSTRAP#") -and ($commandLine -match "start") -and ($commandLine -match "catalina.home=`"$catalina_home`"")) {
        fail_if_running;
      }
    }
    if ($processName -match "tomcat") {
      $serviceName = $commandLine.Split("//")[-1];
      $service = Get-Service -name "$serviceName";

      if($service -and ($service.Status -eq "RUNNING")) {
        fail_if_running;
      }
    }
  }
:IF &UC4RB_TC_START_MODE# = "SERVICE"
  $service = Get-Service -name "&UC4RB_TC_SERVICE_NAME#";
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS
  if($service -and ($service.Status -eq "RUNNING")) {
    fail_if_running;
  }
:ENDIF
  echo "Error starting."
  exit(2);
}
else {
  echo "Port is not used.";
:IF &UC4RB_TC_START_MODE# = "SCRIPT"

  $existed = (Test-Path "&UC4RB_TC_HOME_DIR#\bin\startup.bat");
  if (!$existed) {
    echo "File &UC4RB_TC_HOME_DIR#\bin\startup.bat does not existed.";
    echo "Error starting.";
    exit(2);
  }

! Change directory to bin
  cd "&UC4RB_TC_HOME_DIR#\bin";
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS

! Backup setenv.bat if existed
  if (Test-Path "&UC4RB_TC_HOME_DIR#\bin\setenv.bat") {
    Copy-Item .\setenv.bat .\temp_setenv.bat
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS
  }
! Create setenv.bat file to set JAVA_OPTS variable
  New-Item .\setenv.bat -type file -force -value "SET JAVA_OPTS=&UC4RB_TC_JAVA_OPTIONS#";
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS

! Call script
  .\startup.bat;
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS

  echo "Tomcat is starting now..."
  Start-Sleep -seconds 10

! Delete created file
  Remove-Item .\setenv.bat;
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS

! Recover setenv.bat
  if (Test-Path "&UC4RB_TC_HOME_DIR#\bin\temp_setenv.bat") {
    Copy-Item .\temp_setenv.bat .\setenv.bat;
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS
  }

! Check port
  foreach ($port in $portList) {
    if ((netstat -naop TCP) | Select-String "$port") {
      echo "OK."
      exit(0);
    }
    else {
      echo "Error starting."
      exit(2);
    }
  }
:  ELSE
! Get Service name
  $service = Get-Service -name "&UC4RB_TC_SERVICE_NAME#";
  if (!$service) {
! Service is not installed and exit.
    echo "&UC4RB_TC_SERVICE_NAME# service is not installed.";
    echo "Error starting."
    exit(2);
  }
  else {
! Start service
    if ($service.Status -ne "RUNNING") {
      Start-Service &UC4RB_TC_SERVICE_NAME#;
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS
    } else {
      fail_if_running
    }

    echo "Tomcat is starting now..."
    Start-Sleep -seconds 10

! Get service status and check if it is running.
    $service = Get-Service -name "&UC4RB_TC_SERVICE_NAME#";
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_POWERSHELL_CMD@WINDOWS

    $status = $service.Status
    if ($service.Status -eq "RUNNING") {
      echo "OK."
      exit(0);
    }
    else {
      echo "Error starting."
      exit(2);
    }
  }
:ENDIF
}]]></process>
      </row>
      <row>
         <pre_process>:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.PREPARE_JOB</pre_process>
      </row>
   </scripts>
   <job_attributes>
      <row>
         <activation_at_runtime>1</activation_at_runtime>
         <platform>WINDOWS</platform>
         <agent><![CDATA[<WIN>]]></agent>
         <job_report_path>2</job_report_path>
         <win_work_dir>c:\</win_work_dir>
         <win_typ>2</win_typ>
         <win_view>0</win_view>
         <win_logon_as_batch>0</win_logon_as_batch>
         <win_show_at_desktop>0</win_show_at_desktop>
         <win_report_by_script>0</win_report_by_script>
         <job_object>0</job_object>
         <win_cmd></win_cmd>
      </row>
   </job_attributes>
   <rollback_definitions>
      <row>
      </row>
   </rollback_definitions>
</jobs>

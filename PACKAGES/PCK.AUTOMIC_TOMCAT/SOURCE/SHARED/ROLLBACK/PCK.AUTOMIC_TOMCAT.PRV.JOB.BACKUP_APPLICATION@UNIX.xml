<?xml version="1.0" encoding="UTF-8"?>
<jobs>
   <metadata>
      <row>
         <version>12.2.0</version>
      </row>
   </metadata>
   <general_attributes>
      <row>
         <minimum_ae_version>11.2</minimum_ae_version>
         <auto_deactivation>F</auto_deactivation>
         <child_flags>00000000000000000000000000000000</child_flags>
         <deactivation_condition>ANY_OK</deactivation_condition>
         <platform>UNIX</platform>
         <last_runtimes>AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</last_runtimes>
         <max_parallel_action>1</max_parallel_action>
         <mrt_time>000000</mrt_time>
         <name>PCK.AUTOMIC_TOMCAT.PRV.JOB.BACKUP_APPLICATION@UNIX</name>
         <type>JOBS</type>
         <inherit_output_filter>N</inherit_output_filter>
         <queue>CLIENT_QUEUE</queue>
         <versioning_id>-1729195618</versioning_id>
      </row>
   </general_attributes>
   <scripts>
      <row>
         <process><![CDATA[:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHANGE_DIRECTORY_TO_AGENT_BIN
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CHECK_SHELL_CMD@UNIX

:SET &UC4RB_CONVERTED_STRING# = &UC4RB_TC_HOME_DIR#
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.CONVERT_SLASHES_UNIX_STYLE
:SET &UC4RB_TC_HOME_DIR# = &UC4RB_CONVERTED_STRING#

! Create backup directory
:SET &DIRECTORY# = &UC4RB_BACKUP_DIRECTORY#
:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.ENSURE_DIRECTORY_EXISTS@UNIX

:SET &LENGTH# = STR_LENGTH(&UC4RB_TC_CONTEXT_PATH#)
:SET &BEGIN_CHAR# = STR_CUT(&UC4RB_TC_CONTEXT_PATH#, 1, 1)

:IF &BEGIN_CHAR# = "/"
:  SET &LENGTH# = &LENGTH# -1
:  SET &UC4RB_TC_CONTEXT_NAME# = STR_CUT(&UC4RB_TC_CONTEXT_PATH#, 2, &LENGTH#)
:ELSE
:  SET &UC4RB_TC_CONTEXT_NAME# = &UC4RB_TC_CONTEXT_PATH#
:ENDIF

function backup_application {
  if [ -d "$1" ] || [ -f "$1" ] ;
  then
    echo "Copy '$1' to '&UC4RB_BACKUP_DIRECTORY#'."
    \cp -f -r "$1" "&UC4RB_BACKUP_DIRECTORY#"
    echo "ISEXIST:YES" >> "&UC4RB_BACKUP_REPORT#"
  else
    echo "'$1' does not exist."
    echo "ISEXIST:NO" >> "&UC4RB_BACKUP_REPORT#"
  fi
}

server_xml="&UC4RB_TC_HOME_DIR#/conf/server.xml"
app_path="&UC4RB_TC_HOME_DIR#/&UC4RB_TC_APPBASE#/&UC4RB_TC_CONTEXT_NAME#"
if [ ! -d "$app_path" ] ;
then
  app_path="$app_path.war"
fi

! Get Application name
echo "APPNAME:&UC4RB_TC_CONTEXT_NAME#" > "&UC4RB_BACKUP_REPORT#"

! Check config file exist
if [ -f "$server_xml" ] ;
then
! Get watchDir from server.xml file
  watchDir=$(echo 'xpath /Server/Service/Engine/Host/Cluster/Deployer[@watchEnabled="true"]/@watchDir' |
    xmllint --shell "$server_xml" | grep "content=" | awk -F"=" '{print $NF}')
  if [ -z "$watchDir" ] ;
  then
    echo "Server assumes not cluster deployment or watchDir is not specified."
    echo "ISFARM:NO" >> "&UC4RB_BACKUP_REPORT#"
    backup_application "$app_path"
  else
    echo "Server is cluster deployment."
    path="$watchDir/&UC4RB_TC_CONTEXT_NAME#.war"
! Check war file exist in watchDir
    if [ -f "$path" ] ;
    then
      echo "Application found in '$watchDir'."
      echo "ISFARM:YES" >> "&UC4RB_BACKUP_REPORT#"
      backup_application "$path"
    else
      echo "Application not found in '$watchDir'."
      echo "ISFARM:NO" >> "&UC4RB_BACKUP_REPORT#"
      backup_application "$app_path"
    fi
  fi
else
  echo "'$server_xml' did not exist."
  echo "Server assumes not cluster deployment."
  echo "ISFARM=NO" >> "&UC4RB_BACKUP_REPORT#"
  backup_application "$app_path"
fi
]]></process>
      </row>
      <row>
         <pre_process>:INCLUDE PCK.ITPA_SHARED.PRV.INCLUDE.PREPARE_JOB</pre_process>
      </row>
   </scripts>
   <job_attributes>
      <row>
         <activation_at_runtime>1</activation_at_runtime>
         <platform>UNIX</platform>
         <agent><![CDATA[<UNIX>]]></agent>
         <job_report_path>2</job_report_path>
         <priority>0</priority>
         <unix_shell></unix_shell>
         <unix_shell_options></unix_shell_options>
         <unix_type></unix_type>
         <unix_cmd></unix_cmd>
      </row>
   </job_attributes>
   <rollback_definitions>
      <row>
      </row>
   </rollback_definitions>
</jobs>
